generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model banners {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  url        String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model branches {
  id           Int      @id @default(autoincrement())
  address      String
  open_time    DateTime @db.Time(6)
  close_time   DateTime @db.Time(6)
  is_open      Boolean? @default(true)
  service_fee  Decimal? @default(0.00) @db.Decimal(10, 2)
  rating       Decimal? @db.Decimal(3, 2)
  rating_count Int?     @default(0)
  min_price    Decimal? @db.Decimal(10, 2)
  max_price    Decimal? @db.Decimal(10, 2)
  brand_id     Int
  brands       brands   @relation(fields: [brand_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model brands {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(255)
  branches branches[]
}

model food_types {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  image       String?
  description String?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  foods       foods[]
}

model foods {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String?
  image       String?
  kind        Int
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  updated_at  DateTime?  @default(now()) @db.Timestamp(6)
  food_types  food_types @relation(fields: [kind], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id           Int       @id @default(autoincrement())
  email        String    @unique @db.VarChar(255)
  phone_number String?   @unique @db.VarChar(15)
  account      String    @unique @db.VarChar(255)
  password     String    @db.VarChar(255)
  first_name   String?   @db.VarChar(100)
  last_name    String?   @db.VarChar(100)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
}
